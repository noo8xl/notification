package models

import (
	"go.mongodb.org/mongo-driver/bson/primitive"
)

// DbConfig -> config for the database connection
type DbConfig struct {
	User     string
	Password string
	Name     string
}

// CompanyList -> just a list of clients
type CompanyList struct {
	ID            primitive.ObjectID `bson:"_id,omitempty"`
	CompanyDomain string             `bson:"companyDomain" json:"companyDomain"` // company domain name (ex: crypto.com)
}

// CompanyDetails -> describe client details
type CompanyDetails struct {
	ID         primitive.ObjectID `bson:"_id,omitempty"`
	CompanyId  string             `bson:"companyId" json:"companyId"`   // CompanyList._id
	UserEmail  string             `bson:"userEmail" json:"userEmail"`   // company email
	JoinDate   string             `bson:"joinDate" json:"joinDate"`     // date
	DomainName string             `bson:"domainName" json:"domainName"` // company domain name (ex: crypto.com)
	UniqueKey  string             `bson:"uniqueKey" json:"uniqueKey"`   // unique hash generated by dto
}

// NotificationHistory -> notification history entity
type NotificationHistory struct {
	ID          primitive.ObjectID `bson:"_id,omitempty"`
	DateTime    string             `bson:"dateTime" json:"dateTime"`       // notification date
	Recipient   string             `bson:"recipient" json:"recipient"`     // user email or telegram chatId (recipient)
	DomainName  string             `bson:"domainName" json:"domainName"`   // company domain name (sender)
	MessageBody string             `bson:"messageBody" json:"messageBody"` // notification message body
	SentVia     string             `bson:"sentVia" json:"sentVia"`         // notification service name (ex: email)
}
